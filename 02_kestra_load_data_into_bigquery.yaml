### Kestra flow #1. Assign key-value pairs
id: 01_gcp_kv
namespace: zoomcamp

tasks:
  - id: gcp_project_id
    type: io.kestra.plugin.core.kv.Set
    key: GCP_PROJECT_ID
    kvType: STRING
    value: 

  - id: gcp_location
    type: io.kestra.plugin.core.kv.Set
    key: GCP_LOCATION
    kvType: STRING
    value: 

  - id: gcp_bucket_name
    type: io.kestra.plugin.core.kv.Set
    key: GCP_BUCKET_NAME
    kvType: STRING
    value: 

  - id: gcp_dataset
    type: io.kestra.plugin.core.kv.Set
    key: GCP_DATASET
    kvType: STRING
    value: 

### Kestra flow #2. Set up GCS bucket and BigQuery dataset
id: 02_gcp_setup
namespace: zoomcamp

tasks:
  - id: create_gcs_bucket
    type: io.kestra.plugin.gcp.gcs.CreateBucket
    ifExists: SKIP
    storageClass: REGIONAL
    name: "{{kv('GCP_BUCKET_NAME')}}"

  - id: create_bq_dataset
    type: io.kestra.plugin.gcp.bigquery.CreateDataset
    name: "{{kv('GCP_DATASET')}}"
    ifExists: SKIP

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_CREDS')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"

### Kestra flow #3. Load data to BigQuery from GCS bucket
id: 03_load_data_to_bigquery
namespace: zoomcamp

inputs:
  - id: year
    type: SELECT
    displayName: Select year
    values: ["2019", "2020"]
    defaults: "2019"
    allowCustomValue: true

variables:
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/citibike/{{inputs.year}}/{{inputs.year}}.parquet"
  table: "{{kv('GCP_DATASET')}}.{{inputs.year}}_citibike"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      year: "{{inputs.year}}"

  # create empty citibike_data table in BigQuery
  - id: citibike_data
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.citibike_data`
      (
          unique_row_id BYTES OPTIONS (description = 'A unique identifier for the trip, generated by hashing key trip attributes.'),
          tripduration NUMERIC OPTIONS (description = 'Time duration of the citi bike ride.'),
          started_at TIMESTAMP OPTIONS (description = ''),
          ended_at TIMESTAMP OPTIONS (description = ''),
          start_station_name STRING OPTIONS (description = ''),
          start_lat FLOAT64 OPTIONS (description = 'Start station latitude.'),
          start_lng FLOAT64 OPTIONS (description = 'Start station longitude.'),
          end_station_name STRING OPTIONS (description = ''),
          end_lat FLOAT64 OPTIONS (description = 'End station latitude.'),
          end_lng FLOAT64 OPTIONS (description = 'End station longitude.'),
          usertype STRING OPTIONS (description = ''),
          birth_year INT64 OPTIONS (description = ''),
          gender INT64 OPTIONS (description = ''),
          year INT64 OPTIONS (description = ''),
          month INT64 OPTIONS (description = ''),
          rideable_type STRING OPTIONS (description = 'Type of bike.'),
          member_casual STRING OPTIONS (description = 'Type of bike.')
      )
      PARTITION BY DATE(started_at);

  # create external table based on GCS parquet file
  - id: table_ext
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE OR REPLACE EXTERNAL TABLE `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}_ext`
      (
          tripduration NUMERIC OPTIONS (description = 'Time duration of the citi bike ride.'),
          started_at TIMESTAMP OPTIONS (description = ''),
          ended_at TIMESTAMP OPTIONS (description = ''),
          start_station_name STRING OPTIONS (description = ''),
          start_lat FLOAT64 OPTIONS (description = 'Start station latitude.'),
          start_lng FLOAT64 OPTIONS (description = 'Start station longitude.'),
          end_station_name STRING OPTIONS (description = ''),
          end_lat FLOAT64 OPTIONS (description = 'End station latitude.'),
          end_lng FLOAT64 OPTIONS (description = 'End station longitude.'),
          usertype STRING OPTIONS (description = ''),
          birth_year INT64 OPTIONS (description = ''),
          gender INT64 OPTIONS (description = ''),
          year INT64 OPTIONS (description = ''),
          month INT64 OPTIONS (description = ''),
          rideable_type STRING OPTIONS (description = 'Type of bike.'),
          member_casual STRING OPTIONS (description = 'Type of bike.')
      )
      OPTIONS (
          format = 'PARQUET',
          uris = ['{{render(vars.gcs_file)}}']
      );

  # create temporary table in BigQuery based on the external table and create unique row
  - id: bq_table_tmp
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE OR REPLACE TABLE `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}`
      AS
      SELECT
        MD5(CONCAT(
          COALESCE(CAST(started_at AS STRING), ""),
          COALESCE(CAST(ended_at AS STRING), ""),
          COALESCE(CAST(start_lat AS STRING), "")
        )) AS unique_row_id,
        *
      FROM `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}_ext`;

  # merge unique rows from tem table into citibike_data table (final product)
  - id: bq_merge
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      MERGE INTO `{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.citibike_data` T
      USING `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}` S
      ON T.unique_row_id = S.unique_row_id
      WHEN NOT MATCHED THEN
        INSERT (unique_row_id, tripduration, started_at, ended_at, start_station_name,start_lat, start_lng, end_station_name, end_lat, end_lng, usertype, birth_year, gender, year, month, rideable_type, member_casual)
        VALUES (S.unique_row_id, S.tripduration, S.started_at, S.ended_at, S.start_station_name, S.start_lat, S.start_lng, S.end_station_name, S.end_lat, S.end_lng, S.usertype, S.birth_year, S.gender, S.year, S.month, S.rideable_type, S.member_casual);

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_CREDS')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"
  